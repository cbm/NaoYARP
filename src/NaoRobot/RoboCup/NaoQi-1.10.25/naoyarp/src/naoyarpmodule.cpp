/**
 * @author Alexandros Paraschos
 *
 * Version : $Id$
 * This file was generated by Aldebaran Robotics ModuleGenerator
 */

#include "naoyarpmodule.h"

#include <alvalue/alvalue.h>
#include <alcommon/alproxy.h>
#include <alcommon/albroker.h>

#include "NaoRobot/ALBrokerWrapperClass.h"


/**
 * Constructor for NaoYARPModule object
 * @param broker The parent broker
 * @param name The name of the module
 */
NaoYARPModule::NaoYARPModule (
    AL::ALPtr<AL::ALBroker> broker,
    const std::string& name ) : AL::ALModule ( broker, name ) {
    setModuleDescription ( "This is an autogenerated module, this descriptio needs to be updated." );

    functionName ( "dummyFunction", "NaoYARPModule", "An autogenerated dummyFunction." );
    addParam ( "msg", "A string describing a message: the module will print this message when this method is called" );
    addParam ( "foo", "A second parameter parameter. An AL::ALValue that will be returned." );
    setReturn ( "return", "Returns the foo parameter" );
    BIND_METHOD ( NaoYARPModule::dummyFunction );

    ALBrokerWrapper::Instance().SetBroker ( broker );

    dev = new DeviceManager;

}

/**
 * Destructor for NaoYARPModule object
 */
NaoYARPModule::~NaoYARPModule() {
  delete dev;
}


/**
 * dummyFunction
 * @param msg Message to show on screen
 * @param foo The function will return this parameter
 * @return The AL::ALValue given by the foo parameter
 */
AL::ALValue NaoYARPModule::dummyFunction (
    const std::string& msg,
    const AL::ALValue& foo ) {
    std::cout << "NaoYARPModule received message : " << msg << std::endl;

    if ( foo.isValid() )
        std::cout << "Return value: " << foo.toString ( AL::VerbosityMini ) << std::endl;
    else
        std::cout << "The value you sent was invalid." << std::endl;

    return foo;
}
